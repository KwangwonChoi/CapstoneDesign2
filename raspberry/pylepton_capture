#!/usr/bin/env python
import socket
import sys
import numpy as np
import cv2
from pylepton import Lepton
import json

def capture(cnt = 0, flip_v = False, device = "/dev/spidev0.0"):
  with Lepton(device) as l:
    a,_ = l.capture()
  
  if flip_v:
    cv2.flip(a,0,a)
  cv2.normalize(a, a, 0, 65535, cv2.NORM_MINMAX)
  #cv2.imwrite('image_65535.jpg', a)
  #np.right_shift(a, 8, a)
  

  #name = 'test' + str(cnt) + '.png'
  
  #cv2.imwrite(name, a)
  
  result = json.dumps(a.tolist()).encode()
  
  
  return len(result), result

if __name__ == '__main__':
  from optparse import OptionParser
  
  cnt = 0

  
  usage = "usage: %prog [options] output_file[.format]"
  parser = OptionParser(usage=usage)

  parser.add_option("-f", "--flip-vertical",
                    action="store_true", dest="flip_v", default=False,
                    help="flip the output image vertically")

  parser.add_option("-d", "--device",
                    dest="device", default="/dev/spidev0.0",
                    help="specify the spi device node (might be /dev/spidev0.1 on a newer device)")

  (options, args) = parser.parse_args()

  while True :
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    sock.bind(("192.168.0.18", 8080))
    sock.listen(True)
    conn, addr = sock.accept()
    length, image = capture(cnt, flip_v = options.flip_v, device = options.device)
    cnt+= 1
  
    conn.send(str(length))
    conn.send(image)
    #cv2.imwrite('imgae_255.jpg', image)

    sock.close()
